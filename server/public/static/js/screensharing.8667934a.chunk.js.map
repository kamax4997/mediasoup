{"version":3,"sources":["ScreenShare.js"],"names":["electron","isElectron","window","require","ElectronScreenShare","this","_stream","Promise","resolve","then","desktopCapturer","getSources","types","sources","source","name","navigator","mediaDevices","getUserMedia","audio","video","mandatory","chromeMediaSource","chromeMediaSourceId","id","stream","MediaStream","getTracks","forEach","track","stop","DisplayMediaScreenShare","options","constraints","_toConstraints","getDisplayMedia","isFinite","width","height","frameRate","FirefoxScreenShare","mediaSource","min","max","DefaultScreenShare","ScreenShare","device","platform","flag","version"],"mappings":"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","file":"static/js/screensharing.8667934a.chunk.js","sourcesContent":["import isElectron from 'is-electron';\n\nlet electron = null;\n\n/** \n * Check if window.require function exits\n * because electron default is \"nodeIntegration: false\"\n * and this case window.require is not a function.\n * It caused issue with Rocket Chat electron client.\n * \n * TODO: do it more inteligently.\n */\nif (isElectron() && typeof window.require === 'function')\n\telectron = window.require('electron');\n\nclass ElectronScreenShare\n{\n\tconstructor()\n\t{\n\t\tthis._stream = null;\n\t}\n\n\tstart()\n\t{\n\t\treturn Promise.resolve()\n\t\t\t.then(() =>\n\t\t\t{\n\t\t\t\treturn electron.desktopCapturer.getSources({ types: [ 'window', 'screen' ] });\n\t\t\t})\n\t\t\t.then((sources) =>\n\t\t\t{\n\t\t\t\tfor (const source of sources)\n\t\t\t\t{\n\t\t\t\t\t// Currently only getting whole screen\n\t\t\t\t\tif (source.name === 'Entire Screen')\n\t\t\t\t\t{\n\t\t\t\t\t\treturn navigator.mediaDevices.getUserMedia({\n\t\t\t\t\t\t\taudio : false,\n\t\t\t\t\t\t\tvideo :\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tmandatory :\n\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\tchromeMediaSource   : 'desktop',\n\t\t\t\t\t\t\t\t\tchromeMediaSourceId : source.id\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t})\n\t\t\t.then((stream) =>\n\t\t\t{\n\t\t\t\tthis._stream = stream;\n\n\t\t\t\treturn stream;\n\t\t\t});\n\t}\n\n\tstop()\n\t{\n\t\tif (this._stream instanceof MediaStream === false)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stream.getTracks().forEach((track) => track.stop());\n\t\tthis._stream = null;\n\t}\n\n\tisScreenShareAvailable()\n\t{\n\t\treturn true;\n\t}\n}\n\nclass DisplayMediaScreenShare\n{\n\tconstructor()\n\t{\n\t\tthis._stream = null;\n\t}\n\n\tstart(options = {})\n\t{\n\t\tconst constraints = this._toConstraints(options);\n\n\t\treturn navigator.mediaDevices.getDisplayMedia(constraints)\n\t\t\t.then((stream) =>\n\t\t\t{\n\t\t\t\tthis._stream = stream;\n\n\t\t\t\treturn Promise.resolve(stream);\n\t\t\t});\n\t}\n\n\tstop()\n\t{\n\t\tif (this._stream instanceof MediaStream === false)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stream.getTracks().forEach((track) => track.stop());\n\t\tthis._stream = null;\n\t}\n\n\tisScreenShareAvailable()\n\t{\n\t\treturn true;\n\t}\n\n\t_toConstraints(options)\n\t{\n\t\tconst constraints = {\n\t\t\tvideo : {}\n\t\t};\n\n\t\tif (isFinite(options.width))\n\t\t{\n\t\t\tconstraints.video.width = options.width;\n\t\t}\n\t\tif (isFinite(options.height))\n\t\t{\n\t\t\tconstraints.video.height = options.height;\n\t\t}\n\t\tif (isFinite(options.frameRate))\n\t\t{\n\t\t\tconstraints.video.frameRate = options.frameRate;\n\t\t}\n\n\t\treturn constraints;\n\t}\n}\n\nclass FirefoxScreenShare\n{\n\tconstructor()\n\t{\n\t\tthis._stream = null;\n\t}\n\n\tstart(options = {})\n\t{\n\t\tconst constraints = this._toConstraints(options);\n\n\t\treturn navigator.mediaDevices.getUserMedia(constraints)\n\t\t\t.then((stream) =>\n\t\t\t{\n\t\t\t\tthis._stream = stream;\n\n\t\t\t\treturn Promise.resolve(stream);\n\t\t\t});\n\t}\n\n\tstop()\n\t{\n\t\tif (this._stream instanceof MediaStream === false)\n\t\t{\n\t\t\treturn;\n\t\t}\n\n\t\tthis._stream.getTracks().forEach((track) => track.stop());\n\t\tthis._stream = null;\n\t}\n\n\tisScreenShareAvailable()\n\t{\n\t\treturn true;\n\t}\n\n\t_toConstraints(options)\n\t{\n\t\tconst constraints = {\n\t\t\tvideo : {\n\t\t\t\tmediaSource : 'window'\n\t\t\t},\n\t\t\taudio : false\n\t\t};\n\n\t\tif ('mediaSource' in options)\n\t\t{\n\t\t\tconstraints.video.mediaSource = options.mediaSource;\n\t\t}\n\t\tif (isFinite(options.width))\n\t\t{\n\t\t\tconstraints.video.width = {\n\t\t\t\tmin : options.width,\n\t\t\t\tmax : options.width\n\t\t\t};\n\t\t}\n\t\tif (isFinite(options.height))\n\t\t{\n\t\t\tconstraints.video.height = {\n\t\t\t\tmin : options.height,\n\t\t\t\tmax : options.height\n\t\t\t};\n\t\t}\n\t\tif (isFinite(options.frameRate))\n\t\t{\n\t\t\tconstraints.video.frameRate = {\n\t\t\t\tmin : options.frameRate,\n\t\t\t\tmax : options.frameRate\n\t\t\t};\n\t\t}\n\n\t\treturn constraints;\n\t}\n}\n\nclass DefaultScreenShare\n{\n\tisScreenShareAvailable()\n\t{\n\t\treturn false;\n\t}\n}\n\nexport default class ScreenShare\n{\n\tstatic create(device)\n\t{\n\t\tif (isElectron() && electron)\n\t\t\treturn new ElectronScreenShare();\n\t\telse if (device.platform !== 'desktop')\n\t\t\treturn new DefaultScreenShare();\n\t\telse\n\t\t{\n\t\t\tswitch (device.flag)\n\t\t\t{\n\t\t\t\tcase 'firefox':\n\t\t\t\t{\n\t\t\t\t\tif (device.version < 66.0)\n\t\t\t\t\t\treturn new FirefoxScreenShare();\n\t\t\t\t\telse\n\t\t\t\t\t\treturn new DisplayMediaScreenShare();\n\t\t\t\t}\n\t\t\t\tcase 'safari':\n\t\t\t\t{\n\t\t\t\t\tif (device.version >= 13.0)\n\t\t\t\t\t\treturn new DisplayMediaScreenShare();\n\t\t\t\t\telse\n\t\t\t\t\t\treturn new DefaultScreenShare();\n\t\t\t\t}\n\t\t\t\tcase 'chrome':\n\t\t\t\tcase 'chromium':\n\t\t\t\tcase 'opera':\n\t\t\t\tcase 'edge':\n\t\t\t\t{\n\t\t\t\t\treturn new DisplayMediaScreenShare();\n\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t{\n\t\t\t\t\treturn new DefaultScreenShare();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n}\n"],"sourceRoot":""}